name: Release Workflow

on:
  release:
    types: [published]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and tag Docker image
        run: |
          docker build -t test-server:${{ github.event.release.tag_name }} .
          docker tag test-server:${{ github.event.release.tag_name }} mikigbo/test-server:${{ github.event.release.tag_name }}
          docker tag test-server:${{ github.event.release.tag_name }} mikigbo/test-server:latest

      - name: Install trivy
        run: |
          wget -qO- https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      - name: Run Trivy vulnerability scan
        run: trivy image test-server:${{ github.event.release.tag_name }} --format json > trivy-report.json

      - name: Create directory for Node.js code
        run: mkdir nodejs

      - name: Download Node.js script
        run: curl -o nodejs/analyzeVulnerabilities.js https://raw.githubusercontent.com/igboma/devops-tools/main/nodejs/analyse_report.js

      - name: Download package.json
        run: curl -o nodejs/package.json https://raw.githubusercontent.com/igboma/devops-tools/main/nodejs/package.json

      - name: Install Node.js dependencies for vulnerability analysis
        working-directory: nodejs
        run: npm install

      - name: Run vulnerability analysis
        working-directory: nodejs
        run: node analyzeVulnerabilities.js $GITHUB_WORKSPACE/trivy-report.json

      - name: Determine success or failure
        run: |
          if [ $? -eq 0 ]; then
            echo "Vulnerability check passed. Proceeding with deployment."
          else
            echo "Vulnerability check failed. Halting deployment."
            exit 1
          fi

      - name: Delete vulnerability file
        run: rm trivy-report.json

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker images to Docker Hub
        run: |
          docker push mikigbo/test-server:${{ github.event.release.tag_name }}
          docker push mikigbo/test-server:latest

      - name: Install yq
        run: |
          sudo apt-get update && sudo apt-get install -y python3-pip
          pip3 install yq

      - name: Update values.yaml in main branch and merge to release tag
        run: |
          TAG=${{ github.event.release.tag_name }}
        
          # Configure Git
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
        
          # Fetch and checkout main branch
          git fetch origin
          git checkout main
          git pull origin main
        
          # Update the tag in values.yaml
          yq eval ".image.tag = \"$TAG\"" -i argocd/values.yaml
        
          # Commit and push changes
          git add argocd/values.yaml
          git commit -m "Update values.yaml for release $TAG"
          git push origin main
            
          # Fetch and checkout cd-release branch
          git fetch origin
          git checkout cd-release
          git pull origin cd-release
        
          # Merge main into cd-release, preferring main's changes in conflicts
          git merge main -X theirs --allow-unrelated-histories
        
          # Push changes
          git push origin cd-release
